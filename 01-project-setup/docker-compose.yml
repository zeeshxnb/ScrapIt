# Docker Compose Configuration for ScrapIt
# 
# Services to include:
# - PostgreSQL database
# - Redis for caching and task queue
# - Backend FastAPI service
# - Frontend React service
# - Celery worker for background tasks
#
# Tips:
# - Use environment variables for sensitive data
# - Set up volume mounts for database persistence
# - Configure networks for service communication
# - Add health checks for all services
# - Use depends_on to manage startup order
#
# Example structure:
# version: '3.8'
# services:
#   postgres:
#     # PostgreSQL configuration
#   redis:
#     # Redis configuration  
#   backend:
#     # FastAPI backend
#   frontend:
#     # React frontend
#   celery:
#     # Background worker
version: '3.9'
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: scrapit
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build: ../backend
    env_file:
      - ../backend/.env.example
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  celery:
    build: ../backend
    env_file:
      - ../backend/.env.example
    depends_on:
      - db
      - redis
    command: ["celery", "-A", "app.tasks", "worker", "--loglevel=info"]
    volumes:
      - ../backend:/app

  frontend:
    build: ../frontend
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
    command: ["npm", "start"]

volumes:
  db_data:
  redis_data: